#import "RCTViewSnapshotter.h"

@implementation RCTViewSnapshotter

RCT_EXPORT_MODULE();

+ (instancetype)sharedInstance {
  static RCTViewSnapshotter *sharedViewSnapshotter = nil;
  @synchronized(self) {
    if (sharedViewSnapshotter == nil)
      sharedViewSnapshotter = [self new];
  }
  return sharedViewSnapshotter;
}

- (instancetype)init
{
  self = [super init];
  if (self) {
    self.viewSnapshots = [@[] mutableCopy];
  }
  return self;
}

- (void)snapshotView:(nonnull NSNumber *)reactTag
            viewName:(NSString *)viewName
             rootTag:(__unused NSNumber *)rootTag
               props:(NSDictionary *)props
{
  [self.viewSnapshots addObject:@{
                                  @"type": @"create",
                                  @"reactTag": reactTag,
                                  @"viewName": viewName,
                                  @"rootTag": rootTag,
                                  @"props": props ?: [NSNull null]
                                  }];
}

- (void)snapshotSetChildren:(nonnull NSNumber *)containerTag
                  reactTags:(NSArray<NSNumber *> *)reactTags
{
  [self.viewSnapshots addObject:@{
                                 @"type": @"setChildren",
                                 @"containerTag": containerTag,
                                 @"reactTags": reactTags
                                  }];
}


RCT_EXPORT_METHOD(saveSnapshot)
{
  NSData *jsonData = [NSJSONSerialization dataWithJSONObject:[RCTViewSnapshotter sharedInstance].viewSnapshots options:NSJSONWritingPrettyPrinted error:NULL];
  NSString *jsonString = [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
  
  NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
  NSString *documentsDirectory = [paths objectAtIndex:0];
  NSString *path = [documentsDirectory stringByAppendingPathComponent:@"view-snapshot.json"];
  [jsonString writeToFile:path atomically:YES encoding:NSUTF8StringEncoding error:NULL];
  NSLog(@"Wrote snapshot to %@", path);
}

@end
